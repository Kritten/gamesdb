# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type Category {
    games: [Game!]!
    id: Int!
    name: String!
}

type Game {
    categories: [Category!]!
    complexity: Int
    countPlayersMax: Int
    countPlayersMin: Int
    description: String
    expansions: [Game!]!
    id: Int!
    isCoop: Boolean
    isExpansionOf: [Game!]!
    mechanisms: [Mechanism!]!
    minutesPlaytimeMax: Int
    minutesPlaytimeMin: Int
    moods: [Mood!]!
    name: String!
    playableWith: [Game!]!
    sessions: [Session!]!
    size: Int
    universe: [Universe!]!
}

type Mechanism {
    games: [Game!]!
    id: Int!
    name: String!
}

type Mood {
    games: [Game!]!
    id: Float!
    name: String!
}

type Mutation {
    createGame(gameData: GameInput!): Game!
    deleteGame(idGame: Int!): Boolean!
    updateGame(gameData: UpdateGameInput!): Game!
}

type Player {
    id: Int!
    name: String!
    sessionsPlayed: [Session!]!
    sessionsWon: [Session!]!
}

type Query {
    games: [Game!]!
}

type Session {
    date: DateTime!
    duration: Int!
    game: [Game!]!
    id: Int!
    players: [Player!]!
    rating: Int!
    winners: [Player!]!
}

type Universe {
    games: [Game!]!
    id: Int!
    name: String!
}

input GameInput {
    categories: [Int!]
    complexity: Int
    countPlayersMax: Int
    countPlayersMin: Int
    description: String
    expansions: [Int!]
    id: Int
    isCoop: Boolean
    isExpansionOf: [Int!]
    mechanisms: [Int!]
    minutesPlaytimeMax: Int
    minutesPlaytimeMin: Int
    moods: [Int!]
    name: String!
    playableWith: [Int!]
    size: Int
    universe: Int
}

input UpdateGameInput {
    categories: [Int!]
    complexity: Int
    countPlayersMax: Int
    countPlayersMin: Int
    description: String
    expansions: [Int!]
    id: Int!
    isCoop: Boolean
    isExpansionOf: [Int!]
    mechanisms: [Int!]
    minutesPlaytimeMax: Int
    minutesPlaytimeMin: Int
    moods: [Int!]
    name: String
    playableWith: [Int!]
    size: Int
    universe: Int
}


"A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format."
scalar DateTime